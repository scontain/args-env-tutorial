
# First, we read the last environment values like SESSION

source last_env.sh

# let us read the session back from CAS
scone session read $SESSION

# the policy was extended by a default access_policy
# that defines who can read, update, and create nested
# policies.
# We see that the CREATOR - which is a public key
# this public key is our public key that the SCONE
# CLI has generated

scone self show-certificate 

# We cross-compile (again) our print-arg-env.c program

scone-gcc print-arg-env.c -g -O3 -o scone-print-arg-env

# We run now the program under control of CAS. 
# Hence, we need to define the session and the service that we want to use

SCONE_CONFIG_ID=$SESSION/scone-print-arg-env ./scone-print-arg-env

# Let us run and try to provide some external environment variables
# and arguments for the program

env1=we env2=cannot env3=overwrite env4=environment SCONE_CONFIG_ID=$SESSION/scone-print-arg-env ./scone-print-arg-env variables

# We see that these external environment variables and arguments
# are now ignored

# We store the current environment in file last_env.sh

env -u PS1 |  awk -e '{ print "export \""$0"\"" }' | > last_env.sh
